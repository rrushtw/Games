using LeeCode.ZigZagConversion;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace LeeCodeTestProject
{
    [TestClass]
    public class UnitTest_ZigZag
    {
        private IZigZag Solution { get; set; }

        [TestMethod]
        public void Example1()
        {
            //arrange
            Solution = new ZigZagClass();

            //act
            var actaul = Solution.Convert("PAYPALISHIRING", 3);

            //assert
            var expected = "PAHNAPLSIIGYIR";
            Assert.AreEqual(expected, actaul);
        }

        [TestMethod]
        public void Example2()
        {
            //arrange
            Solution = new ZigZagClass();

            //act
            var actaul = Solution.Convert("PAYPALISHIRING", 4);

            //assert
            var expected = "PINALSIGYAHRPI";
            Assert.AreEqual(expected, actaul);
        }

        [TestMethod]
        public void Example3()
        {
            //arrange
            Solution = new ZigZagClass();

            //act
            var actaul = Solution.Convert("A", 1);

            //assert
            var expected = "A";
            Assert.AreEqual(expected, actaul);
        }

        [TestMethod]
        public void Example4()
        {
            //arrange
            Solution = new ZigZagClass();

            //act
            var actaul = Solution.Convert

            //assert
            var expected
            Assert.AreEqual(expected, actaul);
        }
    }
}
